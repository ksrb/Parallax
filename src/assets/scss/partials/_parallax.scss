//Base styles
$perspective: 100;
.parallax {
  perspective: $perspective + px;
  //http://www.w3.org/TR/css-transforms-1/#3d-transform-rendering
  //perspective-origin: 100%;
  height: 100vh;
  overflow-x: hidden;
  overflow-y: auto;

  .group {
    position: relative;
    height: 100vh;
    transform-style: preserve-3d;
  }

  $numbers-in-english: (
          'one', 'two', 'three',
          'four', 'five', 'six',
          'seven', 'eight', 'nine',
  );

  @mixin create-layers($num-layers, $separate-by: 200) {
    $distance: 0;
    @for $i from 1 through $num-layers {
      &.#{nth($numbers-in-english, $i)} {
        transform: translateZ($distance + px) scale(1 + ($distance * -1)/$perspective);
        $distance: $distance - $separate-by;
      }
    }
  }

  .layer {
    //transform-origin: 100%;
    position: absolute;
    width: 100%;
    height: 100%;
    @include create-layers(4, 100);
  }
}

//Demo styles
.parallax {

  .layer {
    //Center all content
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
  }
}
